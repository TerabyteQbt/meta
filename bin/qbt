#!/usr/bin/env bash

set -e

# USAGE: use in place or copy this script somewhere where it will be on your path.
# modify the INSTALL_PREFIX if desired.  QBT stores caches in ~/.qbt, so that should work for most people.
#
# DEPENDENCIES: download requires curl and openssl

# Change these to update qbt version.
export META_TOOLS_COMMIT="35b0ae06721e396a1ece243fa4ff94f47ea8fdcd" # the sha1 we built this from, FYI
export META_TOOLS_CV="e8605d60e705a93c653307c425829047068ee4b1" # the CV that results (multiple commits might generate the same CV)
export META_TOOLS_SHA256="3ed6fa685a09b981a1b8d85d7a650888c054ead50f1466399da153da9fac46f7" # this is the sha256sum of the build published - we are not bit-for-bit reproducible, so this could change if you build your own.

# github is as good a hosting platform as any
export PUBLIC_QBT_URL="https://github.com/TerabyteQbt/meta/releases/download/metatools-1489427073/meta_tools-e8605d60e705a93c653307c425829047068ee4b1.tar.gz"

INSTALL_PREFIX="$HOME/.qbt"
META_TOOLS_PATH="$INSTALL_PREFIX/meta-tools-$META_TOOLS_CV"
QBT_BIN="$META_TOOLS_PATH/bin/qbt"

if [[ ! -x "$QBT_BIN" ]]; then
    echo "Downloading QBT MetaTools ($META_TOOLS_CV)..."
    TMP_BIN="$(mktemp --suffix=.tar.gz)"
    function cleanup {
        rm -f $TMP_BIN
    }
    trap cleanup EXIT

    curl -L $PUBLIC_QBT_URL > $TMP_BIN

    TEST_SHA256="$(openssl sha256 $TMP_BIN | sed 's/.* //')"
    if [[ "$TEST_SHA256" != "$META_TOOLS_SHA256" ]]; then
        echo "ERROR: sha256 mismatch ($META_TOOLS_SHA256 does not match $TEST_SHA256)" 1>&2
        exit 1
    fi
    mkdir -p $META_TOOLS_PATH
    (cd $META_TOOLS_PATH && tar -xzf $TMP_BIN)
fi

# qbt requires JAVA_HOME to be set
# building java with qbt requires JAVA_1_8_HOME to be set
# the qbt wrapper script will complain if JAVA_HOME is not set, but let's try to do better

if [[ -z "$JAVA_HOME" ]]; then
    if [[ "$(uname)" == "Darwin" ]]; then
        # get java_home for a mac
        export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"
    else
        # try to get it from the path
        JAVA_BIN="$(which java)"
        JAVA_BIN_DIRNAME="$(dirname $JAVA_BIN)"
        if [[ "$(basename $JAVA_BIN_DIRNAME)" == "bin" ]]; then
            # this looks right
            export JAVA_HOME="$(dirname $JAVA_BIN_DIRNAME)"
        fi
    fi

    # if we set it ourselves, make sure it is the right version
    if [[ ! -x "$JAVA_HOME/bin/java" ]]; then
        echo "Error setting JAVA_HOME: '$JAVA_HOME/bin/java' not executable" 1>&2
        exit 1
    fi
    if $JAVA_HOME/bin/java -version 2>&1 | head -n1 | grep -v -q 1.8; then
        echo "Error setting JAVA_HOME: '$JAVA_HOME/bin/java' not a 1.8 JDK" 1>&2
        exit 1
    fi
fi

# use this for JAVA_1_8_HOME
if [[ -z "$JAVA_1_8_HOME" ]]; then
    export JAVA_1_8_HOME=$JAVA_HOME
fi

$QBT_BIN "$@"
